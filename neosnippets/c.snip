# GObject templates {{{
snippet apex-gofh "libapex GLib C header file"
abbr    agofh
    /*
     * Copyright © the Apex contributors. All rights reserved.
     *
     * This file is part of libapex, distributed under the MIT license.
     * For full terms see the included LICENSE file.
     */

    #ifndef APEX_${1:upper case name}_H
    #define APEX_$1_H

    #include <glib-object.h>

    G_BEGIN_DECLS

    #define APEX_TYPE_$1 apex_${2:snake case name}_get_type ()
    G_DECLARE_FINAL_TYPE (Apex${3:camel case name}, apex_$2, APEX, $1, GObject)

    Apex$3 *apex_$2_new (void);

    G_END_DECLS

    #endif /* APEX_$1_H */

snippet apex-gofc "libapex GLib C source file"
abbr    agofc
    /*
     * Copyright © the Apex contributors. All rights reserved.
     *
     * This file is part of libapex, distributed under the MIT license.
     * For full terms see the included LICENSE file.
     */

    #include "apex-${1:kabob case name}.h"

    struct _Apex${2:camel case name}
    {
      GObject parent;
    };

    G_DEFINE_TYPE (Apex$2, apex_${3:snake case name}, G_TYPE_OBJECT)

    static void
    apex_$3_finalize (GObject *object)
    {
      Apex$2 *self = (Apex$2 *)object;

      G_OBJECT_CLASS (apex_$3_parent_class)->finalize (object);
    }

    static void
    apex_$3_class_init (Apex$2Class *klass)
    {
      GObjectClass *object_class = G_OBJECT_CLASS (klass);

      object_class->finalize = apex_$3_finalize;
    }

    static void
    apex_$3_init (Apex$2 *self)
    {
    }

    Apex$2 *
    apex_$3_new (void)
    {
      Apex$2 *object = g_object_new (APEX_TYPE_${4:upper case name}, NULL);

      // TODO: add setup

      return object;
    }

snippet apex-gproph  "GLib property get/set function prototypes"
abbr    agprh
    ${1:prop type} apex_${2:snake case class name}_get_${3:prop name} (Apex${4:camel case class name} *self);
    void apex_$2_set_$3 (Apex$4 *self,
                         $1 $3);

snippet apex-gpropce "GLib property C file enum/def"
abbr    agprce
    enum {
      PROP_0,
      PROP_, // ... add here
      N_PROPS
    };

    static GParamSpec *properties [N_PROPS];

snippet apex-gpropcget "GLib property C file class_get_property fn"
abbr    agprcg
    static void
    apex_${1:snake case class name}_get_property (GObject *object,
                            guint       prop_id,
                            GValue     *value,
                            GParamSpec *pspec)
    {
      Apex${2:camel case class name} *self = APEX_${3:upper case class name} (object);

      switch (prop_id)
        {
        //case PROP_:
        //  g_value_set_ (value, apex_$1_get_ (self));
        //  break;

        default:
          G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
        }
    }

snippet apex-gpropcset "GLib property C file class_set_property fn"
abbr    agprcs
    static void
    apex_${1:snake case class name}_set_property (GObject      *object,
                            guint         prop_id,
                            const GValue *value,
                            GParamSpec   *pspec)
    {
      Apex${2:camel case class name} *self = APEX_${3:upper case class name} (object);

      switch (prop_id)
        {
        //case PROP_:
        //  apex_$1_set_ (self, g_value_get_boolean (value));
        //  break;

        default:
          G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
        }
    }

snippet apex-gpropinit "GLib property class init section"
abbr    agprinit
    object_class->get_property = apex_${1:snake case class name}_get_property;
    object_class->set_property = apex_$1_set_property;

    // example
    //properties [PROP_BPROP] =
    //  g_param_spec_boolean ("prop",
    //                        "Prop",
    //                        "The prop...",
    //                        FALSE,
    //                        (G_PARAM_READWRITE | G_PARAM_EXPLICIT_NOTIFY));

    g_object_class_install_properties (object_class, N_PROPS, properties);

snippet appex-gpropgetter "GLib property C file get fn for individual property"
abbr    agprgetter
    ${1:property type}
    apex_${2:snake case class name}_get_${3:property name} (Apex${4:camel case class name} *self)
    {
      g_return_if_fail (APEX_IS_${5:upper case class name} (self));

      return self->$1;
    }

snippet appex-gpropsetter "GLib property C file set fn for individual property"
abbr    agprsetter
    void
    apex_${1:snake case class name}_set_${2:property name} (Apex${3:camel case class name} *self,
                                                                ${4:property type} ${5:property name})
    {
      g_return_if_fail (APEX_IS_${6:upper case class name} (self));

      self->$5 = $5;
    }

# }}}
